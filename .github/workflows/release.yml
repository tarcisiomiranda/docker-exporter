name: Build & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Fetch tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.x'

    - name: Initialize Go module and install dependencies
      run: |
        go mod init docker_exporter
        go get github.com/docker/docker/client
        go get github.com/prometheus/client_golang/prometheus
        go get github.com/prometheus/client_golang/prometheus/promhttp

    - name: Build binary
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o docker_exporter .

    - name: Get latest tag
      run: echo "LATEST_TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV

    - name: Print latest tag
      run: echo "Latest tag is $LATEST_TAG"

    - name: Print GITHUB_ENV
      run: echo $GITHUB_ENV

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LATEST_TAG }}
        release_name: Release ${{ env.LATEST_TAG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./docker_exporter
        asset_name: docker_exporter
        asset_content_type: application/octet-stream
